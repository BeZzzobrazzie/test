"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkprtf_hotel"] = self["webpackChunkprtf_hotel"] || []).push([["src_blocks_masked-text-field_masked-text-field_copy_js"],{

/***/ "./src/blocks/masked-text-field/masked-text-field copy.js":
/*!****************************************************************!*\
  !*** ./src/blocks/masked-text-field/masked-text-field copy.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MaskedTextField\": () => (/* binding */ MaskedTextField)\n/* harmony export */ });\nclass MaskedTextField {\r\n  constructor(domElement) {\r\n    this.domElement = domElement;\r\n    this.initEventListener(this.domElement);\r\n    console.log('init textField');\r\n    this.previous = '';\r\n    this.reg = /^(?:(?:31(\\.)(?:0?[13578]|1[02]))\\1|(?:(?:29|30)(\\.)(?:0?[1,3-9]|1[0-2])\\2))(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$|^(?:29(\\.)0?2\\3(?:(?:(?:1[6-9]|[2-9]\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\\d|2[0-8])(\\.)(?:(?:0?[1-9])|(?:1[0-2]))\\4(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$/;\r\n  }\r\n\r\n  initEventListener(domElement) {\r\n    domElement.addEventListener('focusin', this);\r\n    domElement.addEventListener('focusout', this);\r\n    domElement.addEventListener('input', this);\r\n  }\r\n\r\n\r\n  handleEvent(event) {\r\n    switch(event.type) {\r\n      case 'focusin':\r\n        if(event.target.value == event.target.getAttribute('value')) {\r\n          event.target.value = '';\r\n        }\r\n        break;\r\n      case 'focusout':\r\n        if(event.target.value == '') {\r\n          event.target.value = event.target.getAttribute('value');\r\n        }\r\n        break;\r\n      case 'input':\r\n\r\n        let regexp1 = /[0-3]/;\r\n        let regexp2 = /0[1-9]|[12]\\d|3[01]/;\r\n        let regexp4 = /(0[1-9]|[12]\\d|3[01])\\.[01]/;\r\n        let regexp5 = /(0[1-9]|[12]\\d|3[01])\\.(0[1-9])|(1[012])/; \r\n        let regexp10 = /(0[1-9]|[12]\\d|3[01])\\.(0[1-9])|(1[012])\\.(\\d\\d\\d[1-9])|(\\d\\d[1-9]\\d)|(\\d[1-9]\\d\\d)|([1-9]\\d\\d\\d)/; // нужно сделать проверку на 0000 и 0001. !!Сейчас неверно\r\n\r\n        let formatDate = event.target.value.replace(/\\./g, '');\r\n        console.log('formatDate:' + formatDate);\r\n        console.log('this.previous.length:' + this.previous.length);\r\n        console.log('event.target.value.length:' + event.target.value.length);\r\n        if(this.previous.length < event.target.value.length) { // увеличение\r\n          if(event.target.value.length > 10) {\r\n            event.target.value = this.previous;\r\n          }\r\n          else {\r\n            switch(event.target.value.length) {\r\n              case '0':\r\n                break;\r\n              case 1:\r\n                if(!regexp1.test(event.target.value)) {\r\n                  event.target.value = this.previous;\r\n                }\r\n                break;\r\n              case 2:\r\n                if(!regexp2.test(event.target.value)) {\r\n                  event.target.value = this.previous;\r\n                }\r\n                else {\r\n                  event.target.value += '.';\r\n                }\r\n                break;\r\n              case 4:\r\n                if(!regexp4.test(event.target.value)) {\r\n                  event.target.value = this.previous;\r\n                }\r\n                break;\r\n              case 5:\r\n                if(!regexp5.test(event.target.value)) {\r\n                  event.target.value = this.previous;\r\n                }\r\n                else {\r\n                  event.target.value += '.';\r\n                }\r\n                break;\r\n              case 10:\r\n                if(!regexp10.test(event.target.value)) {\r\n                  event.target.value = this.previous;\r\n                }\r\n                break;\r\n            }\r\n          }\r\n          \r\n\r\n          // if(event.target.value.length == 2 || event.target.value.length == 5) {\r\n          //   event.target.value += '.';\r\n          // }\r\n        }\r\n        else if(this.previous.length > event.target.value.length) { // уменьшение\r\n          if(event.target.value.length == 2) {\r\n            event.target.value = event.target.value.slice(0, 1);\r\n          }\r\n          else if(event.target.value.length == 5) {\r\n            event.target.value = event.target.value.slice(0, 4);\r\n          }\r\n        }\r\n\r\n        //console.log(event.target.value.length);\r\n        // switch(formatDate.length) {\r\n        //   case '0':\r\n        //     break;\r\n        //   case 1:\r\n        //     if(!regexp1.test(formatDate)) {\r\n        //       event.target.value = this.previous;\r\n        //     }\r\n        //     break;\r\n        //   case 2:\r\n        //     if(!regexp2.test(formatDate)) {\r\n        //       event.target.value = this.previous;\r\n        //     }\r\n        //     else {\r\n        //       event.target.value += '.';\r\n        //     }\r\n        //     break;\r\n        // }\r\n\r\n        //console.log(this.previous);\r\n        // for(let i of event.target.value) {\r\n        //   //console.log(i);\r\n        //   if(!i.match(/\\d/)) {\r\n        //     console.log('error');\r\n        //     event.target.value = this.previous;\r\n        //   }\r\n        // }\r\n\r\n        // if(regexp.test(event.target.value)) {\r\n        //   console.log('ok');\r\n        // }\r\n        // else {\r\n        //   console.log('not ok');\r\n        // }\r\n\r\n\r\n        this.previous = event.target.value;\r\n        break;\r\n    }\r\n  }\r\n  \r\n}\r\n\r\n\n\n//# sourceURL=webpack://prtf_hotel/./src/blocks/masked-text-field/masked-text-field_copy.js?");

/***/ })

}]);