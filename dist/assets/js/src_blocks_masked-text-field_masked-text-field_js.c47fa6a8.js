"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkprtf_hotel"] = self["webpackChunkprtf_hotel"] || []).push([["src_blocks_masked-text-field_masked-text-field_js"],{

/***/ "./src/blocks/masked-text-field/masked-text-field.js":
/*!***********************************************************!*\
  !*** ./src/blocks/masked-text-field/masked-text-field.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MaskedTextField\": () => (/* binding */ MaskedTextField)\n/* harmony export */ });\nclass MaskedTextField {\r\n  constructor(domElement) {\r\n    this.domElement = domElement;\r\n    this.initEventListener(this.domElement);\r\n    this.reg = /^(?:(?:31(\\.)(?:0?[13578]|1[02]))\\1|(?:(?:29|30)(\\.)(?:0?[1,3-9]|1[0-2])\\2))(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$|^(?:29(\\.)0?2\\3(?:(?:(?:1[6-9]|[2-9]\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\\d|2[0-8])(\\.)(?:(?:0?[1-9])|(?:1[0-2]))\\4(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$/;\r\n    this.dateObj = {\r\n      previous: '',\r\n      current: '',\r\n      day: '',\r\n      month: '',\r\n      year: '',\r\n      dotFirst: false,\r\n      dotSecond: false,\r\n      formatted: true,\r\n    }\r\n  }\r\n\r\n  initEventListener(domElement) {\r\n    domElement.addEventListener('focusin', this);\r\n    domElement.addEventListener('focusout', this);\r\n    domElement.addEventListener('input', this);\r\n    domElement.addEventListener('keydown', this);\r\n  }\r\n\r\n\r\n  handleEvent(event) {\r\n    switch (event.type) {\r\n      case 'focusin':\r\n        if (event.target.value == event.target.getAttribute('value')) {\r\n          event.target.value = '';\r\n        }\r\n        break;\r\n      case 'focusout':\r\n        if (event.target.value == '') {\r\n          event.target.value = event.target.getAttribute('value');\r\n        }\r\n        break;\r\n      case 'input':\r\n\r\n        \r\n        if(!this.checkInput(event)) {\r\n          break;\r\n        }\r\n\r\n        let splitDate = event.target.value.split(/\\.|\\/|-/);\r\n\r\n        this.dateObj.day = splitDate[0];\r\n        this.dateObj.month = splitDate[1];\r\n        this.dateObj.year = splitDate[2];\r\n\r\n        if (Array.from(event.target.value.matchAll(/\\.|\\/|-/g)).length == 1) {\r\n          this.dateObj.dotFirst = true;\r\n        }\r\n        else if (Array.from(event.target.value.matchAll(/\\.|\\/|-/g)).length == 2) {\r\n          this.dateObj.dotFirst = true;\r\n          this.dateObj.dotSecond = true;\r\n        }\r\n\r\n        if (this.dateObj.previous.length <= event.target.value.length) { // увеличение\r\n\r\n          if (this.dateObj.day != undefined && this.dateObj.day.length > 2) {\r\n            event.target.value = this.dateObj.previous;\r\n            this.errAlert();\r\n            break;\r\n          }\r\n          else {\r\n            this.dateObj.formatted = true;\r\n          }\r\n  \r\n          if (this.dateObj.month != undefined && this.dateObj.month.length > 2) {\r\n            event.target.value = this.dateObj.previous;\r\n            this.errAlert();\r\n            break;\r\n          }\r\n          else {\r\n            this.dateObj.formatted = true;\r\n          }\r\n  \r\n          if (this.dateObj.year != undefined && this.dateObj.year.length > 4) {\r\n            event.target.value = this.dateObj.previous;\r\n            this.errAlert();\r\n            break;\r\n          }\r\n          else {\r\n            this.dateObj.formatted = true;\r\n          }\r\n\r\n          \r\n          if (!this.dateObj.dotFirst && this.dateObj.day.length == 2) {\r\n            //event.target.value += '.';\r\n            this.dateObj.dotFirst = true;\r\n          }\r\n          if (this.dateObj.dotFirst && this.dateObj.day.length == 1) {\r\n            //event.target.value = '0' + event.target.value;\r\n            this.dateObj.day += '0';\r\n          }\r\n          if (this.dateObj.dotFirst && this.dateObj.month != undefined && this.dateObj.month.length == 2) {\r\n            //event.target.value += '.';\r\n            this.dateObj.dotSecond = true;\r\n          }\r\n\r\n          if (this.dateObj.dotFirst && this.dateObj.dotSecond) {\r\n            if (this.dateObj.day.length == 1) {\r\n              //event.target.value = '0' + event.target.value;\r\n              this.dateObj.day += '0';\r\n            }\r\n            if (this.dateObj.month.length == 1) {\r\n              //event.target.value = event.target.value.slice(0, 3) + '0' + event.target.value.slice(3);\r\n              this.dateObj.month += '0';\r\n            }\r\n          }\r\n          \r\n        }\r\n        else if (this.dateObj.previous.length == event.target.value.length) { // изменение при том же количестве символов\r\n\r\n        }\r\n        else if (this.dateObj.previous.length > event.target.value.length) { // уменьшение \r\n\r\n        }\r\n\r\n        this.genDateOutput(event);\r\n\r\n\r\n\r\n\r\n\r\n\r\n        if (this.dateObj.dotFirst && this.dateObj.dotSecond) {\r\n\r\n        }\r\n        else if (this.dateObj.dotFirst && !this.dateObj.dotSecond) {\r\n\r\n        }\r\n        else if (!this.dateObj.dotFirst && !this.dateObj.dotSecond) {\r\n          \r\n        }\r\n\r\n\r\n\r\n        if (this.dateObj.previous.length <= event.target.value.length) { // увеличение\r\n          // if (Array.from(event.target.value.matchAll(/\\.|\\/|-/g)).length == 0 && this.dateObj.day.length == 2) {\r\n          //   event.target.value += '.';\r\n          // }\r\n          // if (Array.from(event.target.value.matchAll(/\\.|\\/|-/g)).length == 1 && this.dateObj.day.length == 1) {\r\n          //   event.target.value = '0' + event.target.value;\r\n          // }\r\n          // if (Array.from(event.target.value.matchAll(/\\.|\\/|-/g)).length == 1 && this.dateObj.month != undefined && this.dateObj.month.length == 2) {\r\n          //   event.target.value += '.';\r\n          // }\r\n          \r\n          // if (Array.from(event.target.value.matchAll(/\\.|\\/|-/g)).length == 2) {\r\n          //   if(this.dateObj.day.length == 1) {\r\n          //     event.target.value = '0' + event.target.value;\r\n          //   }\r\n          //   if(this.dateObj.month.length == 1) {\r\n          //     event.target.value = event.target.value.slice(0, 3) + '0' + event.target.value.slice(3);\r\n          //   }\r\n          // }\r\n\r\n\r\n\r\n\r\n\r\n        }\r\n        else if (this.dateObj.previous.length == event.target.value.length) { // изменение при том же количестве символов\r\n\r\n        }\r\n        else if (this.dateObj.previous.length > event.target.value.length) { // уменьшение \r\n\r\n        }\r\n\r\n        this.dateObj.previous = event.target.value;\r\n        break;\r\n\r\n      case 'keydown':\r\n        if (\r\n          event.code == 'ArrowLeft' || \r\n          event.code == 'ArrowRight' || \r\n          event.code == 'ArrowUp' || \r\n          event.code == 'ArrowDown' || \r\n          event.code == 'ArrowUp ctrlKey' || \r\n          event.code == 'ArrowDown ctrlKey' || \r\n          event.code == 'Home' || \r\n          event.code == 'End') {          \r\n          this.getCursorPosition(this.domElement.querySelector('.masked-text-field__input'));\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  errAlert() {\r\n    let elem = this.domElement.querySelector('.masked-text-field__input');\r\n    elem.style.borderColor = 'red';\r\n    setTimeout(() => {\r\n      elem.style.borderColor = '';\r\n    }, 1000);\r\n  }\r\n\r\n\r\n  getCursorPosition(parent) {\r\n    setTimeout(() => {\r\n      console.log(parent.selectionStart);\r\n    }, 1)\r\n  }\r\n\r\n  checkInput(event) {\r\n    let validChar = /[^\\d-\\/\\.]/;\r\n    if (validChar.test(event.target.value)) {  // проверка на недопустимые символы\r\n      event.target.value = this.dateObj.previous;\r\n      this.errAlert();\r\n      return false;\r\n    }\r\n\r\n    if (event.target.value.length > 10) {    // проверка на максимальное количество символов (скорее всего избыточно)\r\n      event.target.value = this.dateObj.previous;\r\n      this.errAlert();\r\n      return false;\r\n    }\r\n\r\n    if (Array.from(event.target.value.matchAll(/\\.|\\/|-/g)).length > 2) {  // проверка на количество разделителей\r\n      event.target.value = this.dateObj.previous;\r\n      this.errAlert();\r\n      return false;\r\n    }\r\n\r\n    if (Array.from(event.target.value.matchAll(/\\d/g)).length > 8) {       // проверка на количество символов\r\n      event.target.value = this.dateObj.previous;\r\n      this.errAlert();\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  \r\n  genDateOutput(event) {\r\n    let day = (this.dateObj.day != undefined) ? this.dateObj.day : '';\r\n    let month = (this.dateObj.month != undefined) ? this.dateObj.month : '';\r\n    let year = (this.dateObj.year != undefined) ? this.dateObj.year : '';\r\n    let dotFirst = this.dateObj.dotFirst ? '.' : '';\r\n    let dotSecond = this.dateObj.dotSecond ? '.' : '';\r\n\r\n    event.target.value = day + dotFirst + month + dotSecond + year;\r\n  }\r\n\r\n}\r\n\r\n\n\n//# sourceURL=webpack://prtf_hotel/./src/blocks/masked-text-field/masked-text-field.js?");

/***/ })

}]);